name: ci

env:
  CTEST_PARALLEL_LEVEL: 4
  HOMEBREW_NO_INSTALL_CLEANUP: 1
  CTEST_NO_TESTS_ACTION: error
  CMAKE_BUILD_PARALLEL_LEVEL: 4

on:
  push:
    paths:
      - "**.c"
      - "**.cpp"
      - "**.f90"
      - "**.F90"
      - "**.cmake"
      - "**/CMakeLists.txt"
      - "CMakePresets.json"
      - "cmake/libraries.json"
      - "!cmake/intel.cmake"
      - ".github/workflows/ci.yml"
# paths ignore starting with "!"
      - "!docs/**"
      - "!**/cray.cmake"


jobs:

  core:
    timeout-minutes: 30

    strategy:
      matrix:
        hwm14: [false]
        os: [ubuntu-latest]
        gcc: [9,10,11,12,13]
        include:
        - os: macos-latest
          gcc: 13
          hwm14: false

    env:
      CC: gcc-${{ matrix.gcc }}
      CXX: g++-${{ matrix.gcc }}
      FC: gfortran-${{ matrix.gcc }}

    runs-on: ${{ matrix.os }}

    steps:

    - name: Checkout Gemini3D-External
      uses: actions/checkout@v4
      with:
        repository: gemini3d/external
        path: gemext

    - name: Install packages (Linux)
      if: runner.os == 'Linux'
      timeout-minutes: 15
      run: |
        sudo $(cmake -P gemext/scripts/requirements.cmake)
        sudo apt install ninja-build

    - name: Install packages (MacOS)
      if: runner.os == 'macOS'
      timeout-minutes: 15
      run: |
        $(cmake -P gemext/scripts/requirements.cmake)
        brew install ninja

    - name: Install model libraries
      timeout-minutes: 15
      run: cmake -Dprefix=${{ runner.temp }} -Dmumps_only:BOOL=on -P build-online.cmake
      working-directory: gemext

    - uses: actions/checkout@v4

    - name: Configure multi
      run: >-
        cmake --preset multi
        -DCMAKE_PREFIX_PATH:PATH=${{ runner.temp }}
        -Dhwm14:BOOL=${{ matrix.hwm14 }}

    - name: print config log
      if: ${{ failure() }}
      run: cat build/CMakeFiles/CMakeConfigureLog.yaml

    - name: Debug build
      run: cmake --build --preset debug

    - name: Debug unit test
      run: ctest --preset debug -L unit

    # - name: Debug core test
    #   run: ctest --preset debug -LE unit -R "(2dew_.*fang|2dns_.*fang)"


    - name: Release build
      run: cmake --build --preset release

    - name: Release unit test
      run: ctest --preset release -L unit

    # # - name: Release core test
    # #   run: ctest --preset release -LE unit -E 3d
