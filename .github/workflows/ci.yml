name: ci

env:
  CTEST_PARALLEL_LEVEL: 2
  HOMEBREW_NO_INSTALL_CLEANUP: 1

on:
  push:
    paths:
      - "**.c"
      - "**.f90"
      - "**.F90"
      - "**.cmake"
      - "**/CMakeLists.txt"
      - "!cmake/compilers/intel.cmake"
      - ".github/workflows/ci.yml"
# paths ignore starting with "!"
      - "!docs/**"


jobs:

  linux_mac:
    timeout-minutes: 30

    strategy:
      matrix:
        msis2: [true, false]
        hwm14: [true, false]
        img: [{os: ubuntu-latest, cc: gcc-8, cxx: g++-8, fc: gfortran-8},
              {os: ubuntu-latest, cc: gcc-11, cxx: g++-11, fc: gfortran-11},
              {os: macos-latest, cc: gcc, cxx: g++, fc: gfortran-11}]

    env:
      CC: ${{ matrix.img.cc }}
      CXX: ${{ matrix.img.cxx }}
      FC: ${{ matrix.img.fc }}

    runs-on: ${{ matrix.img.os }}

    steps:

    - name: Checkout Gemini3D-External
      uses: actions/checkout@v2
      with:
        repository: gemini3d/external
        path: gemext

    - name: Install CMake 3.20
      timeout-minutes: 2
      run: |
        cmake -Dversion=${{ env.cmake_version }} -Dprefix=${{ runner.temp }} -P gemext/scripts/install_cmake.cmake
        echo "${{ runner.temp }}/cmake-${{ env.cmake_version }}-linux-x86_64/bin" >> $GITHUB_PATH

    - name: Install packages (Linux)
      if: matrix.img.os == 'ubuntu-latest'
      timeout-minutes: 15
      run: |
        sudo apt update
        sudo $(cmake -P gemext/scripts/requirements.cmake)
        sudo apt install --no-install-recommends liblapack-dev libscalapack-mpi-dev
        sudo apt install --no-install-recommends ${{ matrix.img.cc }} ${{ matrix.img.cxx }} ${{ matrix.img.fc }}

    - name: Install packages (MacOS)
      if: matrix.img.os == 'macos-latest'
      timeout-minutes: 15
      run: |
        $(cmake -P gemext/scripts/requirements.cmake)
        brew install scalapack

    - name: Install model libraries
      timeout-minutes: 15
      run: |
        cmake -Sgemext -Bgemext/build -Dfind:BOOL=true -Dmsis2:BOOL=${{ matrix.msis2 }} -DCMAKE_INSTALL_PREFIX=${{ runner.temp }}
        cmake --build gemext/build --target ffilesystem glow hwm14 msis mumps
        cmake --install gemext/build

    - uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - uses: actions/checkout@v2

    - name: Configure multi
      run: cmake --preset multi -DCMAKE_PREFIX_PATH:PATH=${{ runner.temp }} -Dmsis2:BOOL=${{ matrix.msis2 }} -Dhwm14:BOOL=${{ matrix.hwm14 }}

    - name: Debug build
      run: cmake --build --preset debug

    - name: Debug unit test
      run: ctest --preset debug -L unit

    - name: Debug core test
      run: ctest --preset debug -LE unit -R "(2dew_.*fang|2dns_.*fang)"


    - name: Release build
      run: cmake --build --preset release

    - name: Release unit test
      run: ctest --preset release -L unit

    - name: Release core test
      run: ctest --preset release -LE unit -E 3d
