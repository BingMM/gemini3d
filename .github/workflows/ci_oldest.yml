name: ci_oldest

env:
  CTEST_PARALLEL_LEVEL: 2
  CMAKE_GENERATOR: Ninja

on:
  push:
    paths:
      - "**.c"
      - "**.f90"
      - "**.F90"
      - "**.cmake"
      - "**/CMakeLists.txt"
      - ".github/workflows/ci_oldest.yml"
# paths ignore starting with "!"
      - "!docs/**"
      - "!scripts/**"


jobs:

# Gemini3D is compatible back to GCC 7.5.
# However, to save test setup effort we use GCC 8 and system libs.

  linux-gcc8-cmake-320:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    strategy:
      matrix:
        msis2: [true, false]
        hwm14: [true, false]

    env:
      CC: gcc-8
      CXX: g++-8
      FC: gfortran-8
      cmake_version: '3.20.6'

    steps:
    - uses: actions/checkout@v2

    - name: Checkout Gemini3D-External scripts
      uses: actions/checkout@v2
      with:
        repository: gemini3d/external
        path: gemext

    - uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install apt packages
      timeout-minutes: 3
      run: |
        sudo apt update -yq
        sudo $(cmake -P gemext/scripts/requirements.cmake)
        sudo apt install libscalapack-mpi-dev

    - name: install Ninja + GCC 8 (ABI compatible with GCC 9 system libs)
      run: sudo apt install ninja-build gcc-8 g++-8 gfortran-8

    - name: Install CMake 3.20
      timeout-minutes: 2
      run: |
        cmake -Dversion=${{ env.cmake_version }} -Dprefix=${{ runner.temp }} -P gemext/scripts/install_cmake.cmake
        echo "${{ runner.temp }}/cmake-${{ env.cmake_version }}-linux-x86_64/bin" >> $GITHUB_PATH

    - name: Install numeric libraries
      timeout-minutes: 8
      run: |
        cmake -Sgemext -Bgemext/build -Dfind:BOOL=true -Dmsis2:BOOL=${{ matrix.msis2 }} -DCMAKE_INSTALL_PREFIX=${{ runner.temp }}
        cmake --build gemext/build --target ffilesystem glow hwm14 msis mumps
        cmake --install gemext/build

    - name: Configure release
      run: cmake -B build -DCMAKE_PREFIX_PATH:PATH=${{ runner.temp }} -Dmsis2:BOOL=${{ matrix.msis2 }} -Dhwm14:BOOL=${{ matrix.hwm14 }}

    - name: Release build
      run: cmake --build build

    - name: Release unit test
      run: ctest --test-dir build -L unit

    - name: Release core test
      run: ctest --test-dir build -LE unit -E 3d
