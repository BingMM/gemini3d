variables:
  CI: "true"
  cmake_version: 3.15.1

stages:

- stage: LintChecks
  jobs:
  - job: PEP8_MyPy_Python37
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.7'
        addToPath: true
    - script: pip install -e .[tests]
      displayName: 'Dev install'
    - script: flake8
      displayName: PEP8
    - script: mypy .
      displayName: Type Check

  - job: PEP8_MyPy_Python36
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.6'
        addToPath: true
    - script: pip install -e .[tests]
      displayName: 'Dev install'
    - script: flake8
      displayName: PEP8
    - script: mypy .
      displayName: Type Check

- stage: UnitTests
  jobs:
  - job: UnitGCC6
    pool:
      vmImage: ubuntu-latest

    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.7'
        addToPath: true
    - script: |
        sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
        sudo apt update -q
        sudo apt install -yq --no-install-recommends gcc-6 gfortran-6 liblapack-dev libscalapack-mpi-dev libmumps-dev libopenmpi-dev openmpi-bin
      displayName: 'Install Linux prereqs'
    - script: |
        git clone https://github.com/mesonbuild/meson ../meson
        python -m pip install -e ../meson
        curl -Ls https://github.com/ninja-build/ninja/releases/download/v1.9.0/ninja-linux.zip -o ninja-linux.zip
        sudo unzip ninja-linux.zip -d /usr/local/bin/
      displayName: 'setup Meson'
    - script: python -m pip install -e .[tests]
      displayName: 'Install Python dev'
    - script: meson setup build -Dsystem_blas=true
      env:
        CC: gcc-6
        FC: gfortran-6
      displayName: 'Meson configure'
    - script: meson test -C build --suite unit
      displayName: 'Meson Build and Unit test'
    - publish: build/meson-logs/testlog.txt
      condition: failed()
      artifact: UnitLogGCC6

- stage: IntegrationTests
  jobs:
  - job: UbuntuCMake
    pool:
      vmImage: ubuntu-latest

    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.7'
        addToPath: true
    - script: |
        sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
        sudo apt update -q
        sudo apt install -yq --no-install-recommends gcc-6 gfortran-6 liblapack-dev libscalapack-mpi-dev libmumps-dev libopenmpi-dev openmpi-bin octave
      displayName: 'Install Linux prereqs'
    - script: |
        python -m pip install cmakeutils
        cmake_setup $(cmake_version) --prefix $(HOME)/.local
        echo '##vso[task.setvariable variable=CMAKE_PATH]$(HOME)/.local/cmake-$(cmake_version)-Linux-x86_64/bin'
      displayName: 'Install modern CMake'
    - script: python -m pip install -e .[tests]
      displayName: 'Install Python dev'
    - script: |
        $(CMAKE_PATH)/cmake --version
        $(CMAKE_PATH)/cmake -B build
      env:
        CC: gcc-6
        FC: gfortran-6
      displayName: 'CMake Configure and Generate'
    - script: $(CMAKE_PATH)/cmake --build build --parallel
      displayName: 'CMake build'
    - script: $(CMAKE_PATH)/ctest -R 2d_fang --parallel --output-on-failure
      workingDirectory: build
      displayName: 'CTest 2D Fang'
    - publish: build/CMakeFiles/CMakeError.log
      condition: failed()
      artifact: UbuntuCMakeTestLog

  - job: UbuntuMeson
    pool:
      vmImage: ubuntu-latest

    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.7'
        addToPath: true
    - script: |
        sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
        sudo apt update -q
        sudo apt install -yq --no-install-recommends gcc-6 gfortran-6 liblapack-dev libscalapack-mpi-dev libmumps-dev libopenmpi-dev openmpi-bin octave
      displayName: 'Install Linux prereqs'
    - script: |
        git clone https://github.com/mesonbuild/meson ../meson
        python -m pip install -e ../meson
        curl -Ls https://github.com/ninja-build/ninja/releases/download/v1.9.0/ninja-linux.zip -o ninja-linux.zip
        sudo unzip ninja-linux.zip -d /usr/local/bin/
      displayName: 'setup Meson'
    - script: python -m pip install -e .[tests]
      displayName: 'Install Python dev'
    - script: meson setup build -Dsystem_blas=true
      env:
        CC: gcc-6
        FC: gfortran-6
      displayName: 'Meson configure'
    - script: meson test -C build --suite unit
      displayName: 'Meson build'
    - script: meson test -C build --suite 2d_fang
      displayName: 'Meson test 2D Fang'
    - publish: build/meson-logs/testlog.txt
      condition: failed()
      artifact: LinuxMesonTestLog

  - job: subproject_mumps_scalapack_lapack
    pool:
      vmImage: ubuntu-latest

    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.7'
        addToPath: true
    - script: |
        sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
        sudo apt update -q
        sudo apt install -yq --no-install-recommends gcc-6 gfortran-6 libopenmpi-dev openmpi-bin
      displayName: 'Install Linux prereqs'
    - script: |
        git clone https://github.com/mesonbuild/meson ../meson
        python -m pip install -e ../meson
        curl -Ls https://github.com/ninja-build/ninja/releases/download/v1.9.0/ninja-linux.zip -o ninja-linux.zip
        sudo unzip ninja-linux.zip -d /usr/local/bin/
      displayName: 'setup Meson'
    - script: python -m pip install -e .[tests]
      displayName: 'Install Python dev'
    - script: meson setup build
      env:
        CC: gcc-6
        FC: gfortran-6
      displayName: 'Meson configure'
    - script: meson test -C build --suite unit
      displayName: 'Meson build'
    - script: meson test -C build --suite 2d_fang
      displayName: 'Meson test 2D Fang'
    - publish: build/meson-logs/testlog.txt
      condition: failed()
      artifact: LinuxMesonTestLog

  - job: MacCMake
    pool:
      vmImage: macOS-latest

    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.7'
        addToPath: true
    - script: |
        brew install cmake gcc lapack open-mpi scalapack
        brew tap dpo/openblas
        brew install mumps
      displayName: 'Install library prereqs'
    - script: python -m pip install -e .[tests]
      displayName: 'Install Python dev'
    - script: cmake -B build
      env:
        FC: /usr/local/bin/gfortran-9
        CC: /usr/local/bin/gcc-9
        CXX: /usr/local/bin/g++-9
      displayName: 'CMake: Configure and Generate'
    - script: cmake --build build --parallel
      displayName: 'CMake build'
    - script: ctest -R 2d_fang --parallel --output-on-failure
      workingDirectory: build
      displayName: 'CTest 2D Fang'
    - publish: build/CMakeFiles/CMakeError.log
      condition: failed()
      artifact: MacCMakeTestLog

  - job: MacMesonSubprojects
    pool:
      vmImage: macOS-latest

    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.7'
        addToPath: true
    - script: |
        brew install ninja gcc open-mpi
      displayName: 'Install library prereqs'
    - script: |
        git clone https://github.com/mesonbuild/meson ../meson
        python -m pip install -e ../meson
      displayName: 'Install Meson'
    - script: python -m pip install -e .[tests]
      displayName: 'Install Python dev'
    - script: meson setup build
      env:
        FC: /usr/local/bin/gfortran-9
        CC: /usr/local/bin/gcc-9
        CXX: /usr/local/bin/g++-9
      displayName: 'Meson configure'
    - script: meson test -C build --suite unit
      displayName: 'Meson build'
    - script: meson test -C build --suite 2d_fang
      displayName: 'Meson test 2D Fang'
    - publish: build/meson-logs/testlog.txt
      condition: failed()
      artifact: MacMesonTestLog
